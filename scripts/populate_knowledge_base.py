#!/usr/bin/env python3
"""
Script para popular a tabela knowledge_base no Supabase
Execute este script para adicionar documentos √† base de conhecimento
"""

import os
import sys
from pathlib import Path

# Adicionar o diret√≥rio raiz ao path
sys.path.append(str(Path(__file__).parent.parent))

from datetime import datetime
from app.integrations.supabase_client import supabase_client
from loguru import logger

# Documentos para adicionar √† knowledge base
KNOWLEDGE_DOCUMENTS = [
    {
        "title": "Informa√ß√µes da Empresa Solar Prime",
        "content": """A Solar Prime √© l√≠der em solu√ß√µes de energia solar fotovoltaica em Pernambuco, com mais de 5 anos de experi√™ncia no mercado. Nossa miss√£o √© democratizar o acesso √† energia solar, proporcionando economia e sustentabilidade para resid√™ncias e empresas. Oferecemos economia garantida de at√© 95% na conta de luz, instala√ß√£o em at√© 30 dias, 25 anos de garantia nos pain√©is solares, 10 anos de garantia no inversor, monitoramento 24/7 via aplicativo, equipe t√©cnica certificada, mais de 2000 clientes satisfeitos, nota 4.9 no Google e parceria com as melhores marcas do mercado.""",
        "category": "empresa",
        "tags": ["solar prime", "empresa", "sobre", "informa√ß√µes", "miss√£o"]
    },
    {
        "title": "Processo de Instala√ß√£o Solar",
        "content": """Nosso processo de instala√ß√£o √© simples e eficiente: 1) An√°lise da conta de luz para dimensionamento correto, 2) Projeto personalizado de acordo com suas necessidades, 3) Aprova√ß√£o na concession√°ria local (cuidamos de toda burocracia), 4) Instala√ß√£o profissional em at√© 2 dias, 5) Ativa√ß√£o e monitoramento do sistema. Todo o processo leva em m√©dia 30 dias do contrato at√© a gera√ß√£o de energia.""",
        "category": "instalacao",
        "tags": ["instala√ß√£o", "processo", "etapas", "prazo"]
    },
    {
        "title": "Formas de Pagamento",
        "content": """Oferecemos diversas formas de pagamento para facilitar seu investimento em energia solar: √Ä vista com 10% de desconto especial, Parcelamento em at√© 84x sem entrada, Financiamento banc√°rio com car√™ncia de 6 meses, Modelo de assinatura mensal (voc√™ paga apenas pela energia gerada). Temos sempre uma op√ß√£o que cabe no seu bolso!""",
        "category": "financeiro",
        "tags": ["pagamento", "financiamento", "parcelamento", "valores"]
    },
    {
        "title": "Kit Residencial B√°sico",
        "content": """Para contas de R$ 200 a R$ 400: Sistema de 2-3 kWp com 4 a 6 pain√©is de 550W, inversor de 3kW, produ√ß√£o m√©dia de 350 kWh/m√™s. Investimento a partir de R$ 8.990 com payback de 4 anos. Ideal para casas pequenas e m√©dias.""",
        "category": "produtos",
        "tags": ["kit", "residencial", "b√°sico", "produto", "3kwp"]
    },
    {
        "title": "Kit Residencial Intermedi√°rio",
        "content": """Para contas de R$ 400 a R$ 700: Sistema de 4-5 kWp com 8 a 10 pain√©is de 550W, inversor de 5kW, produ√ß√£o m√©dia de 600 kWh/m√™s. Investimento a partir de R$ 14.990 com excelente custo-benef√≠cio. Perfeito para fam√≠lias de 3-4 pessoas.""",
        "category": "produtos",
        "tags": ["kit", "residencial", "intermedi√°rio", "produto", "5kwp"]
    },
    {
        "title": "Obje√ß√£o: √â muito caro",
        "content": """Entendo sua preocupa√ß√£o! Mas veja s√≥: n√£o √© um gasto, √© um investimento. Voc√™ para de pagar conta de luz e em 4 anos o sistema se paga. Depois disso, s√£o mais 21 anos de energia gr√°tis! Al√©m disso, temos parcelamento em at√© 84x, que fica menor que sua conta atual.""",
        "category": "objecoes",
        "tags": ["obje√ß√£o", "caro", "pre√ßo", "valor", "investimento"]
    },
    {
        "title": "Obje√ß√£o: Preciso pensar",
        "content": """Claro, √© uma decis√£o importante! Enquanto voc√™ pensa, est√° perdendo dinheiro todo m√™s com a conta de luz. Que tal agendarmos uma visita sem compromisso para voc√™ tirar todas as d√∫vidas? Assim voc√™ pode decidir com mais seguran√ßa.""",
        "category": "objecoes",
        "tags": ["obje√ß√£o", "pensar", "decidir", "d√∫vida"]
    },
    {
        "title": "Benef√≠cios da Energia Solar",
        "content": """Economia de at√© 95% na conta de luz, prote√ß√£o contra aumentos tarif√°rios (que sobem 10% ao ano), valoriza√ß√£o do im√≥vel em at√© 10%, contribui√ß√£o para o meio ambiente, independ√™ncia energ√©tica, retorno garantido do investimento, incentivos fiscais e cr√©ditos de carbono.""",
        "category": "beneficios",
        "tags": ["benef√≠cios", "vantagens", "economia", "sustentabilidade"]
    },
    {
        "title": "Garantias Solar Prime",
        "content": """25 anos de garantia de produ√ß√£o nos pain√©is (80% da capacidade), 10 anos de garantia no inversor, 5 anos de garantia na instala√ß√£o, 15 anos de garantia nas estruturas de fixa√ß√£o, 1 ano de manuten√ß√£o preventiva gratuita, suporte t√©cnico vital√≠cio.""",
        "category": "garantias",
        "tags": ["garantia", "suporte", "manuten√ß√£o", "assist√™ncia"]
    },
    {
        "title": "Como Funciona o Sistema Solar",
        "content": """Os pain√©is solares captam a luz do sol e geram energia el√©trica em corrente cont√≠nua (CC). O inversor converte essa energia para corrente alternada (CA), compat√≠vel com sua casa. A energia gerada √© consumida instantaneamente e o excesso vai para a rede, gerando cr√©ditos. √Ä noite ou em dias de baixa produ√ß√£o, voc√™ usa os cr√©ditos acumulados.""",
        "category": "tecnologia",
        "tags": ["funcionamento", "tecnologia", "como funciona", "sistema"]
    }
]

def populate_knowledge_base():
    """Popula a knowledge base no Supabase"""
    try:
        logger.info("üöÄ Iniciando popula√ß√£o da knowledge base...")
        
        # Verificar documentos existentes
        existing = supabase_client.client.table("knowledge_base").select("title").execute()
        existing_titles = [doc["title"] for doc in existing.data] if existing.data else []
        
        logger.info(f"üìä Documentos existentes: {len(existing_titles)}")
        
        inserted = 0
        skipped = 0
        
        for doc in KNOWLEDGE_DOCUMENTS:
            try:
                # Verificar se j√° existe
                if doc["title"] in existing_titles:
                    logger.warning(f"‚è≠Ô∏è  Pulando documento existente: {doc['title']}")
                    skipped += 1
                    continue
                
                # Adicionar timestamps
                doc["created_at"] = datetime.now().isoformat()
                doc["updated_at"] = datetime.now().isoformat()
                
                # Inserir no Supabase
                result = supabase_client.client.table("knowledge_base").insert(doc).execute()
                
                if result.data:
                    logger.success(f"‚úÖ Documento inserido: {doc['title']}")
                    inserted += 1
                else:
                    logger.error(f"‚ùå Erro ao inserir: {doc['title']}")
                    
            except Exception as e:
                logger.error(f"‚ùå Erro ao processar documento {doc['title']}: {e}")
                continue
        
        # Resumo final
        logger.info("=" * 50)
        logger.success(f"‚úÖ Popula√ß√£o conclu√≠da!")
        logger.info(f"üìä Documentos inseridos: {inserted}")
        logger.info(f"‚è≠Ô∏è  Documentos pulados: {skipped}")
        logger.info(f"üìö Total na base: {len(existing_titles) + inserted}")
        
        # Verificar categorias
        categories = supabase_client.client.table("knowledge_base").select("category").execute()
        if categories.data:
            unique_categories = set(doc["category"] for doc in categories.data)
            logger.info(f"üìÅ Categorias dispon√≠veis: {', '.join(unique_categories)}")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Erro cr√≠tico: {e}")
        return False

if __name__ == "__main__":
    # Verificar se as vari√°veis de ambiente est√£o configuradas
    if not os.getenv("SUPABASE_URL") or not os.getenv("SUPABASE_SERVICE_KEY"):
        logger.error("‚ùå Configure SUPABASE_URL e SUPABASE_SERVICE_KEY no arquivo .env")
        sys.exit(1)
    
    # Popular knowledge base
    success = populate_knowledge_base()
    
    if success:
        logger.success("üéâ Script executado com sucesso!")
    else:
        logger.error("‚ùå Script falhou!")
        sys.exit(1)