-- ============================================
-- CORRE√á√ÉO DE DISCREP√ÇNCIAS SCHEMA-C√ìDIGO
-- Data: 15/08/2025
-- Resolve problemas encontrados na an√°lise de conformidade
-- ============================================

-- IMPORTANTE: Execute ap√≥s SUPABASE_SCHEMA_OPTIMIZATION_V3_FIXED.sql

BEGIN;

-- ============================================
-- CORRE√á√ÉO 1: Remover refer√™ncias a agent_sessions
-- (Tabela j√° foi removida, este √© apenas para garantir)
-- ============================================

-- A tabela agent_sessions j√° foi removida no script de otimiza√ß√£o
-- Nenhuma a√ß√£o SQL necess√°ria, mas o c√≥digo Python precisa ser atualizado

-- ============================================
-- CORRE√á√ÉO 2: Campo meeting_scheduled_at
-- O campo foi movido para leads_qualifications
-- ============================================

-- Campo j√° existe em leads_qualifications, n√£o precisa criar
-- Verificar se existe para garantir
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 
        FROM information_schema.columns 
        WHERE table_name = 'leads_qualifications' 
        AND column_name = 'meeting_scheduled_at'
    ) THEN
        ALTER TABLE leads_qualifications 
        ADD COLUMN meeting_scheduled_at TIMESTAMP WITH TIME ZONE;
    END IF;
END $$;

-- ============================================
-- CORRE√á√ÉO 3: Campos extra√≠dos pelo LeadManager
-- Adicionar campos faltantes como JSONB em preferences
-- ============================================

-- O campo preferences j√° existe como JSONB em leads
-- Pode armazenar: location, property_type, has_bill_image, interests, objections

-- Criar fun√ß√£o helper para atualizar preferences
CREATE OR REPLACE FUNCTION update_lead_preferences(
    p_lead_id UUID,
    p_location TEXT DEFAULT NULL,
    p_property_type TEXT DEFAULT NULL,
    p_has_bill_image BOOLEAN DEFAULT NULL,
    p_interests TEXT[] DEFAULT NULL,
    p_objections TEXT[] DEFAULT NULL
) RETURNS VOID AS $$
BEGIN
    UPDATE leads
    SET preferences = preferences || 
        jsonb_strip_nulls(jsonb_build_object(
            'location', p_location,
            'property_type', p_property_type,
            'has_bill_image', p_has_bill_image,
            'interests', p_interests,
            'objections', p_objections
        )),
        updated_at = NOW()
    WHERE id = p_lead_id;
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- CORRE√á√ÉO 4: Garantir colunas removidas n√£o causem erro
-- (channel e sentiment foram removidas de conversations)
-- ============================================

-- Estas colunas j√° foram removidas no script de otimiza√ß√£o
-- O c√≥digo usa IF EXISTS ent√£o n√£o causar√° erro

-- ============================================
-- CORRE√á√ÉO 5: Criar view para compatibilidade
-- View que simula campos antigos para backward compatibility
-- ============================================

-- View para leads com campos de qualifica√ß√£o (compatibilidade)
CREATE OR REPLACE VIEW leads_with_qualification AS
SELECT 
    l.*,
    lq.meeting_scheduled_at,
    lq.google_event_id,
    lq.meeting_link,
    lq.meeting_status,
    lq.is_decision_maker,
    lq.has_solar_system,
    lq.wants_new_solar_system,
    lq.has_active_contract
FROM leads l
LEFT JOIN LATERAL (
    SELECT * FROM leads_qualifications 
    WHERE lead_id = l.id 
    ORDER BY created_at DESC 
    LIMIT 1
) lq ON true;

-- ============================================
-- VALIDA√á√ÉO
-- ============================================

-- Verificar estrutura final
DO $$
DECLARE
    v_count INTEGER;
BEGIN
    -- Verificar se agent_sessions n√£o existe
    SELECT COUNT(*) INTO v_count
    FROM information_schema.tables
    WHERE table_name = 'agent_sessions';
    
    IF v_count = 0 THEN
        RAISE NOTICE '‚úÖ Tabela agent_sessions removida corretamente';
    ELSE
        RAISE WARNING '‚ö†Ô∏è Tabela agent_sessions ainda existe!';
    END IF;
    
    -- Verificar se meeting_scheduled_at existe em leads_qualifications
    SELECT COUNT(*) INTO v_count
    FROM information_schema.columns
    WHERE table_name = 'leads_qualifications'
    AND column_name = 'meeting_scheduled_at';
    
    IF v_count > 0 THEN
        RAISE NOTICE '‚úÖ Campo meeting_scheduled_at existe em leads_qualifications';
    ELSE
        RAISE WARNING '‚ö†Ô∏è Campo meeting_scheduled_at n√£o existe em leads_qualifications!';
    END IF;
    
    -- Verificar se preferences existe em leads
    SELECT COUNT(*) INTO v_count
    FROM information_schema.columns
    WHERE table_name = 'leads'
    AND column_name = 'preferences'
    AND data_type = 'jsonb';
    
    IF v_count > 0 THEN
        RAISE NOTICE '‚úÖ Campo preferences (JSONB) existe em leads para dados adicionais';
    ELSE
        RAISE WARNING '‚ö†Ô∏è Campo preferences n√£o existe em leads!';
    END IF;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üìä Corre√ß√µes aplicadas com sucesso!';
    RAISE NOTICE '‚ö†Ô∏è IMPORTANTE: Atualize o c√≥digo Python para:';
    RAISE NOTICE '   1. Remover m√©todos agent_sessions de supabase_client.py';
    RAISE NOTICE '   2. Usar leads_qualifications.meeting_scheduled_at';
    RAISE NOTICE '   3. Mapear phone‚Üíphone_number e stage‚Üícurrent_stage no LeadManager';
    RAISE NOTICE '   4. Armazenar dados extras em preferences JSONB';
END $$;

COMMIT;

-- ============================================
-- C√ìDIGO PYTHON - CORRE√á√ïES NECESS√ÅRIAS
-- ============================================

/*
ARQUIVO: app/integrations/supabase_client.py
- Remover linhas 463-518 (m√©todos agent_sessions)
- Linha 437: Mudar query para usar leads_qualifications.meeting_scheduled_at

ARQUIVO: app/core/lead_manager.py
- Mudar "phone" para "phone_number"
- Mudar "stage" para "current_stage"
- Armazenar location, property_type, etc em preferences:
  lead_info["preferences"] = {
      "location": location,
      "property_type": property_type,
      "has_bill_image": has_bill_image,
      "interests": interests,
      "objections": objections
  }

ARQUIVO: app/services/followup_executor_service.py
- Remover fallbacks legacy (linha 409 e 405)
- Usar sempre phone_number e scheduled_at
*/