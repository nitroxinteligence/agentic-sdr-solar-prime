#!/usr/bin/env python3
"""
Script de configura√ß√£o do NLTK
Garante que os dados necess√°rios estejam dispon√≠veis
"""
import os
import sys

def setup_nltk():
    """Configura NLTK e baixa dados necess√°rios"""
    try:
        import nltk
        
        # Configurar diret√≥rio de dados
        nltk_data_dir = os.path.expanduser('~/nltk_data')
        if not os.path.exists(nltk_data_dir):
            os.makedirs(nltk_data_dir, exist_ok=True)
        
        # Adicionar diret√≥rio aos caminhos do NLTK
        if nltk_data_dir not in nltk.data.path:
            nltk.data.path.append(nltk_data_dir)
        
        print("üîß Configurando NLTK...")
        
        # Verificar e baixar punkt tokenizer
        try:
            nltk.data.find('tokenizers/punkt')
            print("‚úÖ Punkt tokenizer j√° est√° instalado")
        except LookupError:
            print("üì• Baixando punkt tokenizer...")
            nltk.download('punkt', quiet=False, download_dir=nltk_data_dir)
            print("‚úÖ Punkt tokenizer instalado com sucesso")
        
        # Testar tokeniza√ß√£o em portugu√™s
        from nltk.tokenize import sent_tokenize
        test_text = "Ol√°! Como voc√™ est√°? Eu estou bem."
        sentences = sent_tokenize(test_text, language='portuguese')
        print(f"‚úÖ Teste de tokeniza√ß√£o: {len(sentences)} frases detectadas")
        print(f"   Frases: {sentences}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå Erro: NLTK n√£o est√° instalado. Execute: pip install nltk")
        print(f"   Detalhes: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erro ao configurar NLTK: {e}")
        return False

if __name__ == "__main__":
    success = setup_nltk()
    sys.exit(0 if success else 1)